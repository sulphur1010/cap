.rsvp_block
	- @attendee_event = AttendeesEvent.new unless @attendee_event
	= semantic_form_for @attendee_event, :url => rsvp_event_path(@event), :method => :post, :html => { :id => "rsvp_form" } do |f|
		- if !@event.free_event
			%h3 PRICE:
			- if @event.allow_discount
				%input#standard_price.js_rsvp_form_element.js_cost_category{:type => 'radio', :name => 'price', :value => @event.cost, :checked => true, :'data-type' => 'Standard'}
					%b.price= "#{number_to_currency(@event.cost)}"
					Standard Price
				%br
				%input#discounted_price.js_rsvp_form_element.js_cost_category{:type => 'radio', :name => 'price', :value => @event.discounted_cost, :'data-type' => @event.discounted_text}
					%b.price= "#{number_to_currency(@event.discounted_cost)}"
					= "#{@event.discounted_text}"
			- else
				%input#standard_price.js_rsvp_form_element.js_cost_category{:type => 'radio', :name => 'price', :value => @event.cost, :checked => true, :'data-type' => 'Standard'}
				%b.price= "#{number_to_currency(@event.cost)}"
			%br
			%br
		%hr.thin
		%h3 NUMBER OF TICKETS:
		%select.js_rsvp_form_element{:name => 'count'}
			- (1..10).each do |i|
				%option{:value => i}= i

		- if @event.free_event
			%input{:type => 'hidden', :name => 'price', :value => "0", :'data-type' => 'Standard'}
			%input{:type => 'hidden', :name => 'payment_method', :value => 'other'}
			.user_event_info
				.friendly
					%hr.thin
					%h3 REQUIRED*
					= f.input :first_name
					= f.input :last_name
					= f.input :email
		- else
			%hr.thin
			%h3 PAYMENT METHOD:
			- paypal_payment = true
			- if @payment_method
				- paypal_payment = @payment_method == "paypal"
			- if @event.allow_paypal
				%input#paypal_payment.rsvp_form_element.js_payment_method{:type => 'radio', :name => 'payment_method', :value => 'paypal', :checked => paypal_payment} Pay with Credit Card via Paypal
				/%a#js_paypal_payment.payment_link{:href => '#'} Pay via Paypal
			- if @event.allow_paypal && @event.allow_other_payment_type
				.payment_separator
			- if @event.allow_other_payment_type
				%input#other_payment.rsvp_form_element.js_payment_method{:type => 'radio', :name => 'payment_method', :value => 'other', :checked => !paypal_payment}= @event.other_payment_type_text
				/= link_to @event.other_payment_type_text, rsvp_event_url(@event), :id => 'js_other_payment', :class => 'payment_link', :method => :post
				%p
					.instructions= @event.other_payment_type_instructions
			- if (@event.allow_paypal && @event.allow_3rd_party_payment) || (@event.allow_other_payment_type && @event.allow_3rd_party_payment)
				.payment_separator
			- if @event.allow_3rd_party_payment
				%input#3rd_party_payment.rsvp_form_element.js_payment_method{:type => 'radio', :name => 'payment_method', :value => '3rd_party', :checked => true}= @event.allow_3rd_party_payment_type_instructions
				/= link_to @event.allow_3rd_party_payment_url, rsvp_event_url(@event), :id => 'js_3rd_party_payment', :class => 'payment_link', :method => :post
			- if @event.display_advanced_payment_options
				.payment_separator
				%input#test.rsvp_form_element.js_payment_method{:type => 'radio', :name => 'payment_method', :value => 'test', :checked => false} something
				.payment_separator
				- if @event.advanced_payment_form_file_name?
					= link_to "Download Form", @event.advanced_payment_form.url
			.user_event_info{:style => "display: #{paypal_payment ? "none" : ""}"}
				.friendly
					%hr.thin
					%h3 REQUIRED*
					= f.input :first_name
					= f.input :last_name
					= f.input :email
			%hr.thin
			%h1
				Total:
				%span.js_computed_total

		%br
		- button_value = "RSVP & Pay for this Event"
		- button_value = "RSVP for this Free Event" if @event.free_event?
		%input.rsvp#rsvp_button{:type => "submit", :value => button_value}
:javascript
	function rsvpFormOptions() {
		var rsvp_data = {};
		jQuery.each($("#rsvp_form").serializeArray(), function(i, field) {
			rsvp_data[field.name] = field.value;
		});
		return rsvp_data;
	}

	function calculateTotal() {
		var data = rsvpFormOptions();
		var price = parseInt(data.price);
		var count = parseInt(data.count);
		var total = price * count;
		$(".js_computed_total").html("$" + total);
		return total;
	}

	$(document).ready(function() {

		calculateTotal();

		$(".js_rsvp_form_element").change(function() {
			calculateTotal();
		});

		$(".js_payment_method").click(function() {
			var t = $(this);
			console.log(t);
			if (t.attr('id') == "other_payment") {
				$(".user_event_info").show();
			} else {
				$(".user_event_info").hide();
			}
		});

		if ($("#other_payment").attr('checked')) {
			$(".user_event_info").show();
		}
	});

	$("#rsvp_button").click(function(){
		
		var party_payment = "#{@event.
		allow_3rd_party_payment}"
		var v = "true";
		if (party_payment == v){
			var url = "#{@event.allow_3rd_party_payment_url}"
			if (!/^(f|ht)tps?:\/\//i.test(url)) {
				url = "http://" + url;
			}
			window.open(url, "", "fullscreen=yes");
		}
	});



	
